// Код AI
export type AICode = string;

// Значение AI
export type AIValue = string;

export type GS1_FNC1 = ']d2' |  ']Q3' | ']e0' | ']C1';


export type GS1_Barcode = {

    // FNC1-последовательность
    fnc1Prefix: GS1_FNC1 | '',
    // Исходная символьная последовательность штрих-кода, переданная парсеру
    content: string,

    // Массив с неизвестными идентификаторами и их значений. Строки, состоящие их кодов и значений
    // Парсер знает, что:
    // - по стандарту есть AI с фиксированной длиной значения,ID у этих AI состоят из двух цифр, 
    // - по стандарту есть AI с диапазоном длины значения. Конец значения определяется по GS-разделителю 
    // - есть AI, которые мы ожидаем увидеть в маркировке. Мы их передаём парсеру. Если он их найдёт, 
    // то передаст в составе объекта ais.
    // Если парсер определил fixed или dynamic AI, которых мы не ожидаем, то строку, состоящую из
    // кода AI и его значения, положит в buffer
    buffer: string[],

    // Полученные AI в виде key-value
    // USAGE: var value = barcode.ais['01'];
    ais: Record<AICode, AIValue>,

    // Проверка наличия AI по коду
    // USAGE: barcode.hasAI('01')
    hasAI(aiCode: AICode) : boolean
};